package com.Innspark.spring.boot.angularlogin.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.Innspark.spring.boot.angularlogin.entity.Payload;
import com.Innspark.spring.boot.angularlogin.repository.PayloadRepository;
import com.Innspark.spring.boot.angularlogin.service.PayloadService;
import jakarta.servlet.http.HttpServletRequest;
import java.net.UnknownHostException;
import java.util.List;
import java.util.Optional;

//This class is responsible for all endpoints of payloadclicked that must be required communicate with client
@CrossOrigin(origins = "http://localhost:4200", maxAge = 3600, allowCredentials="true")
@RestController
@RequestMapping("innspark/payload")
//url- http://localhost:8080/inspark/payload
public class PayloadController {

	@Autowired
	PayloadService payLoadService;
	@Autowired
	PayloadRepository payLoad_Repository;
	
	/* ---------------Payload---------------------------------------------------*/
	
	//user will create the payload
	//url- http://localhost:8080/innspark/payload/create
	@PostMapping("/create")
	public ResponseEntity<String> postdetail(@RequestParam("imgicon") MultipartFile imgicon,
            @RequestParam("payload") String payload) {
		String str=null;
		str=payLoadService.create(imgicon,payload);
		return ResponseEntity.ok(str);
		 		
	}
	//User will get the payload by payloadid
	//url- http://localhost:8080/innspark/payload/getpayload/{id}
	@GetMapping("/getpayload/{id}")
	public ResponseEntity<Payload> getId(@PathVariable("id") String id){
		try {
			Integer idint=Integer.parseInt(id);
			Optional<Payload> PayLoadEntityOptional = payLoad_Repository.findById(idint);
			System.out.println(PayLoadEntityOptional.get().getFileData().length);
			return ResponseEntity.ok(PayLoadEntityOptional.get());
			}
		catch(Exception ex) {
			return ResponseEntity.badRequest().build();
		}
	}
	
	//User will get all the payload 
	//url- http://localhost:8080/innspark/payload/getallpayload 
	@GetMapping("/getallpayload")
	public ResponseEntity<List<Payload>> getall() throws UnknownHostException{
		//System.out.println(InetAddress.getLocalHost().getHostName());
		List<Payload> payLoad=payLoadService.getallPayLoad();
		//		respoHeaders.set("Type", "getall");
		return ResponseEntity.ok(payLoad);

	}
	
	//User will update the payload by id
	//url- http://localhost:8080/innspark/payload/update?id={}
	@PutMapping("/update")
	public ResponseEntity<Payload> updatepayload(@RequestParam String id,@RequestParam MultipartFile imgicon,@RequestParam("payload") String payload){
		try {
			Integer payloadid=Integer.parseInt(id);
			Payload payLoad2=payLoadService.updatepayload(payloadid,imgicon,payload);
			return ResponseEntity.ok(payLoad2);
		}
		catch(Exception ex) {
			System.out.println(ex.getMessage());
			
		}
		return ResponseEntity.badRequest().build();
	}
	
	//User will delete the payload by payloadid
	//url- http://localhost:8080/innspark/payload/delete?id={}
	@DeleteMapping("/delete")
	public ResponseEntity<String> deletepayload(@RequestParam("id") String id){
		try {
			Integer payloadid=Integer.parseInt(id);
			String str=payLoadService.deletepayload(payloadid);
			return ResponseEntity.ok(str);
		}
		catch(Exception ex) {
			ex.printStackTrace();
		}
		return null;
	}
	
}
